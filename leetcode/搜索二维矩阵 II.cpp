编写一个高效的算法来搜索?m?x?n?矩阵 matrix 中的一个目标值 target。该矩阵具有以下特性：

每行的元素从左到右升序排列。
每列的元素从上到下升序排列。
示例:

现有矩阵 matrix 如下：

[
  [1,   4,  7, 11, 15],
  [2,   5,  8, 12, 19],
  [3,   6,  9, 16, 22],
  [10, 13, 14, 17, 24],
  [18, 21, 23, 26, 30]
]
给定 target?=?5，返回?true。

给定?target?=?20，返回?false。

class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n = matrix.size();
        if(n == 0)  return false;   //[]
        int m = matrix[0].size();

        int x = 0;
        int y = m-1;
        while(x < n && y >= 0)
        {
            if(matrix[x][y] > target)
                y--;
            else if(matrix[x][y] < target)
                x++;
            else if(matrix[x][y] == target)
                return true;
        }

        return false;
    }
};
