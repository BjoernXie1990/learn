#include <iostream>
#include <algorithm>
using namespace std;

const int N = 1e4 + 10;
int f[N];
int n,m;

void add() {
    for(int i = n - 2; i >= 0; i--) {
        for(int j = n - 1; j > i; j --) {
            if(f[j] > f[i]) {
                swap(f[j],f[i]);
                sort(f+i+1,f+n);
                return ;
            }
        }
    }
}

int main() {
    cin >> n >> m;
    for(int i = 0; i < n; i++) cin >> f[i];
    
    for(int i = 0; i < m; i++) {
        add();
    }
    
    for(int i = 0; i < n; i++) cout << f[i] << " ";
    cout << endl;
    return 0;
}


人类终于登上了火星的土地并且见到了神秘的火星人。

人类和火星人都无法理解对方的语言，但是我们的科学家发明了一种用数字交流的方法。

这种交流方法是这样的，首先，火星人把一个非常大的数字告诉人类科学家，科学家破解这个数字的含义后，再把一个很小的数字加到这个大数上面，把结果告诉火星人，作为人类的回答。

火星人用一种非常简单的方式来表示数字――掰手指。

火星人只有一只手，但这只手上有成千上万的手指，这些手指排成一列，分别编号为1，2，3……。

火星人的任意两根手指都能随意交换位置，他们就是通过这方法计数的。

一个火星人用一个人类的手演示了如何用手指计数。

如果把五根手指――拇指、食指、中指、无名指和小指分别编号为1，2，3，4和5，当它们按正常顺序排列时，形成了5位数12345，当你交换无名指和小指的位置时，会形成5位数12354，当你把五个手指的顺序完全颠倒时，会形成54321，在所有能够形成的120个5位数中，12345最小，它表示1；12354第二小，它表示2；54321最大，它表示120。

下表展示了只有3根手指时能够形成的6个3位数和它们代表的数字：

三位数 123 132 213 231 312 321

代表的数字 1 2 3 4 5 6

现在你有幸成为了第一个和火星人交流的地球人。

一个火星人会让你看他的手指，科学家会告诉你要加上去的很小的数。

你的任务是，把火星人用手指表示的数与科学家告诉你的数相加，并根据相加的结果改变火星人手指的排列顺序。

输入数据保证这个结果不会超出火星人手指能表示的范围。

输入格式
输入包括三行，第一行有一个正整数N，表示火星人手指的数目。

第二行是一个正整数M，表示要加上去的小整数。

下一行是1到N这N个整数的一个排列，用空格隔开，表示火星人手指的排列顺序。

输出格式
输出只有一行，这一行含有N个整数，表示改变后的火星人手指的排列顺序。

每两个相邻的数中间用一个空格分开，不能有多余的空格。

数据范围
1≤N≤10000,
1≤M≤100
输入样例：
5
3
1 2 3 4 5
输出样例：
1 2 4 5 3
