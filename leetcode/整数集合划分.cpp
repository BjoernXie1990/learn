#include <iostream>
#include <algorithm>
using namespace std;

const int N = 1e5 + 10;
int f[N],n;

int main() {
    cin >> n;
    int sum = 0, s1 = 0;
    for(int i = 0; i < n; i++)  {
        cin >> f[i];
        sum += f[i];
    }
    sort(f,f+n);
    int le = 0;
    for(int i = 0; i < n / 2; i++) s1 += f[i];
    if(n & 1) le = 1;
    cout << le << " " << sum - s1 - s1;
}

给定一个包含 N 个正整数的集合，请你将它们划分为两个不相交的集合 A1 和 A2，其中 A1 包含 n1 个元素，A2 包含 n2 个元素。

用 S1 表示集合 A1 内所有元素之和，S2 表示集合 A2 内所有元素之和。

请你妥善划分，使得 |n1?n2| 尽可能小，并在此基础上 |S1?S2| 尽可能大。

输入格式
第一行包含整数 N。

第二行包含 N 个正整数。

输出格式
再一行中输出 |n1?n2| 和 |S1?S2|，两数之间空格隔开。

数据范围
2≤N≤105,
保证集合中各元素以及所有元素之和小于 231。

输入样例1：
10
23 8 10 99 46 2333 46 1 666 555
输出样例1：
0 3611
输入样例2：
13
110 79 218 69 3721 100 29 135 2 6 13 5188 85
输出样例2：
1 9359
