class Solution {
public:
    int maxAbsoluteSum(vector<int>& num) {
        int n = num.size();
        vector<int> f(n+1,0);
        for(int i = 0; i < n; i++) f[i + 1] = f[i] + num[i];

        int res = 0;
        int minN = 0, maxN = 0;
        for(int i = 2; i <= n; i++) {
            res = max(res,abs(f[i] - minN));
            res = max(res,abs(f[i] - maxN));
            minN = min(minN,f[i]);
            maxN = max(maxN,f[i]);
            cout << res << " " << minN << " " << maxN << endl;
        }
        return res;
    }
};


给你一个整数数组?nums?。一个子数组?[numsl, numsl+1, ..., numsr-1, numsr]?的 和的绝对值?为?abs(numsl + numsl+1 + ... + numsr-1 + numsr)?。

请你找出 nums?中 和的绝对值 最大的任意子数组（可能为空），并返回该 最大值?。

abs(x)?定义如下：

如果?x?是负整数，那么?abs(x) = -x?。
如果?x?是非负整数，那么?abs(x) = x?。
?

示例 1：

输入：nums = [1,-3,2,3,-4]
输出：5
解释：子数组 [2,3] 和的绝对值最大，为 abs(2+3) = abs(5) = 5 。
示例 2：

输入：nums = [2,-5,1,-4,3,-2]
输出：8
解释：子数组 [-5,1,-4] 和的绝对值最大，为 abs(-5+1-4) = abs(-8) = 8 。
?

提示：

1 <= nums.length <= 105
-104 <= nums[i] <= 104

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/maximum-absolute-sum-of-any-subarray
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
