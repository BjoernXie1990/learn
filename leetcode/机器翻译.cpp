#include <iostream>
using namespace std;

const int N = 1010;
int n,m;
int q[N],hh,tt;
int st[N];

int main() {
    cin >> n >> m;
    int res = 0;
    tt = -1;
    for(int i = 0; i < m; i++) {
        int a;
        cin >> a;
        if(st[a]) continue;
        if(tt - hh + 1 == n)
            st[q[hh++]] = 0;
        q[++tt] = a;
        st[a] = 1;
        res ++;
    }
    
    cout << res << endl;
    return 0;
}


小晨的电脑上安装了一个机器翻译软件，他经常用这个软件来翻译英语文章。

这个翻译软件的原理很简单，它只是从头到尾，依次将每个英文单词用对应的中文含义来替换。

对于每个英文单词，软件会先在内存中查找这个单词的中文含义，如果内存中有，软件就会用它进行翻译；如果内存中没有，软件就会在外存中的词典内查找，查出单词的中文含义然后翻译，并将这个单词和译义放入内存，以备后续的查找和翻译。?

假设内存中有M个单元，每单元能存放一个单词和译义。

每当软件将一个新单词存入内存前，如果当前内存中已存入的单词数不超过M?1，软件会将新单词存入一个未使用的内存单元；若内存中已存入M个单词，软件会清空最早进入内存的那个单词，腾出单元来，存放新单词。?

假设一篇英语文章的长度为N个单词。

给定这篇待译文章，翻译软件需要去外存查找多少次词典？

假设在翻译开始前，内存中没有任何单词。

输入格式
输入文件共2行，每行中两个数之间用一个空格隔开。?

第一行为两个正整数M和N，代表内存容量和文章的长度。?

第二行为N个非负整数，按照文章的顺序，每个数（大小不超过1000）代表一个英文单词。

文章中两个单词是同一个单词，当且仅当它们对应的非负整数相同。

输出格式
输出文件共1行，包含一个整数，为软件需要查词典的次数。

数据范围
0<M≤100,
0<N≤1000
输入样例：
3 7
1 2 1 5 4 4 1
输出样例：
5
