class Solution {
public:
    const int N = 1010;
    vector<int> relativeSortArray(vector<int>& arr1, vector<int>& arr2) {
        int f[N];
        for(int i = 0; i < N; i++) f[i] = -1;
        for(int i = 0; i < arr2.size(); i++) f[arr2[i]] = i;

        int ri = arr1.size() - 1;
        for(int i = 0; i < arr1.size(); i++) while(ri >= i && f[arr1[i]] == -1) swap(arr1[i],arr1[ri--]);

        sort(arr1.begin(),arr1.begin() + ri + 1,[&](const int& a,const int& b)->bool{
            return f[a] < f[b];
        });
        sort(arr1.begin() + ri + 1,arr1.end());

        return arr1;
    }
};

给你两个数组，arr1 和?arr2，

arr2?中的元素各不相同
arr2 中的每个元素都出现在?arr1?中
对 arr1?中的元素进行排序，使 arr1 中项的相对顺序和?arr2?中的相对顺序相同。未在?arr2?中出现过的元素需要按照升序放在?arr1?的末尾。

?

示例：

输入：arr1 = [2,3,1,3,2,4,6,7,9,2,19], arr2 = [2,1,4,3,9,6]
输出：[2,2,2,1,4,3,3,9,6,7,19]
?

提示：

arr1.length, arr2.length <= 1000
0 <= arr1[i], arr2[i] <= 1000
arr2?中的元素?arr2[i]?各不相同
arr2 中的每个元素?arr2[i]?都出现在?arr1?中

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/relative-sort-array
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
