#include <iostream>
using namespace std;

int n;
int f[7];
int days[13] = {0,31,28,31,30,31,30,31,31,30,31,30,31};

int Getdays(int y,int m) {
    int res = days[m];
    if(m == 2 && ((y % 4 == 0 && y % 100 != 0) || (y % 400 == 0))) {
        res++;
    }
    return res;
}

int main() {
    cin >> n;
    int cnt = 1;
    for(int y = 1900; y < 1900 + n; y ++) {
        for(int m = 1; m <= 12; m++) {
            int days = Getdays(y,m);
            for(int d = 1; d <= days; d++) {
                cnt = (cnt + 1) % 7;
                if(d == 13) f[cnt] ++;
            }
        }
    }
    
    for(int i = 0; i < 7; i++) cout << f[i] << " ";
    cout << endl;
    return 0;
}

十三号星期五真的很不常见吗？

每个月的十三号是星期五的频率是否比一周中的其他几天低？

请编写一个程序，计算 N 年内每个月的 13 号是星期日，星期一，星期二，星期三，星期四，星期五和星期六的频率。

测试的时间段将会开始于 1900 年 1 月 1 日，结束于 1900+N?1 年 12 月 31日。

一些有助于你解题的额外信息：

1900 年 1 月 1 日是星期一。
在一年中，4 月、6 月、9 月、11 月每个月 30 天，2 月平年 28 天，闰年 29 天，其他月份每个月31天。
公历年份是 4 的倍数且不是 100 的倍数的年份为闰年，例如 1992 年是闰年，1990 年不是闰年。
公历年份是整百数并且是 400 的倍数的也是闰年，例如1700年，1800年，1900年，2100年不是闰年，2000年是闰年。
输入格式
共一行，包含一个整数 N。

输出格式
共一行，包含七个整数，整数之间用一个空格隔开，依次表示星期六，星期日，星期一，星期二，星期三，星期四，星期五在十三号出现的次数。

数据范围
1≤N≤400,

输入样例：
20
输出样例：
36 33 34 33 35 35 34
